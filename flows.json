[
    {
        "id": "4c9052b45312a86c",
        "type": "tab",
        "label": "Line 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "771eb579efc3ad88",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#cc0000",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#cc0000",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#cc0000",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#cc0000",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#d1d1d1",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#ff1a1a",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#000000",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#cc0000",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Monitoring",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "90a7d30f4c21fc03",
        "type": "ui_group",
        "name": "Compteur",
        "tab": "14c897da06717aae",
        "order": 4,
        "disp": true,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "14c897da06717aae",
        "type": "ui_tab",
        "name": "Ligne 1",
        "icon": "fa-industry",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5a276994d1d41eb9",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "87ead2af68bf1b3f",
        "type": "ui_spacer",
        "z": "4c9052b45312a86c",
        "name": "spacer",
        "group": "5a276994d1d41eb9",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "3ac4bc89581c4705",
        "type": "ui_group",
        "name": "Informations",
        "tab": "14c897da06717aae",
        "order": 1,
        "disp": true,
        "width": 9,
        "collapse": false,
        "className": ""
    },
    {
        "id": "94836e9a3fe091eb",
        "type": "ui_group",
        "name": "Évenements",
        "tab": "14c897da06717aae",
        "order": 2,
        "disp": true,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5d411f454d039179",
        "type": "ui_group",
        "name": "Arrêts",
        "tab": "14c897da06717aae",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "615289242b142757",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "7f32225f4d85ab9f",
        "type": "ui_spacer",
        "z": "4c9052b45312a86c",
        "name": "spacer",
        "group": "615289242b142757",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "9bf6d3cf0e83084a",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": 6
    },
    {
        "id": "e9ca0809fd06f3f1",
        "type": "ui_spacer",
        "z": "4c9052b45312a86c",
        "name": "spacer",
        "group": "9bf6d3cf0e83084a",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "a06513f3bc8bf3af",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "b0591a83b8db0e5b",
        "type": "ui_spacer",
        "z": "4c9052b45312a86c",
        "name": "spacer",
        "group": "36efc445f780e1d4",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "db379ea9e878043e",
        "type": "ui_spacer",
        "z": "4c9052b45312a86c",
        "name": "spacer",
        "group": "36efc445f780e1d4",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "6b7a3c93784f16e3",
        "type": "ui_spacer",
        "z": "4c9052b45312a86c",
        "name": "spacer",
        "group": "36efc445f780e1d4",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "055a6a93d40c4a7d",
        "type": "ui_spacer",
        "z": "4c9052b45312a86c",
        "name": "spacer",
        "group": "36efc445f780e1d4",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "49e27dd3c1920ef1",
        "type": "ui_spacer",
        "z": "4c9052b45312a86c",
        "name": "spacer",
        "group": "3ac4bc89581c4705",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "6bf31292fcacb358",
        "type": "ui_spacer",
        "z": "4c9052b45312a86c",
        "name": "spacer",
        "group": "3ac4bc89581c4705",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "875f90f3ecb277e4",
        "type": "ui_spacer",
        "z": "4c9052b45312a86c",
        "name": "spacer",
        "group": "3ac4bc89581c4705",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "fb4b2f03c23c1aca",
        "type": "ui_spacer",
        "z": "4c9052b45312a86c",
        "name": "spacer",
        "group": "3ac4bc89581c4705",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "fc391bb0bf5ac955",
        "type": "Stackhero-MySQL-Server",
        "name": "",
        "host": "localhost",
        "port": "3306",
        "tls": false,
        "database": "monitoring"
    },
    {
        "id": "93c5bc104fada713",
        "type": "ui_chart",
        "z": "4c9052b45312a86c",
        "name": "counter_chart",
        "group": "90a7d30f4c21fc03",
        "order": 1,
        "width": 18,
        "height": 8,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 980,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "0d2713a1483cf17c",
        "type": "ui_chart",
        "z": "4c9052b45312a86c",
        "name": "stop_chart",
        "group": "5d411f454d039179",
        "order": 1,
        "width": 6,
        "height": 12,
        "label": "",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1170,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "07a6e8cc20160f6f",
        "type": "inject",
        "z": "4c9052b45312a86c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"series\":[\"Arrêts\"],\"data\":[[5,3,6]],\"labels\":[\"5 min\",\"10 min\",\"Plus\"]}]",
        "payloadType": "json",
        "x": 990,
        "y": 720,
        "wires": [
            [
                "0d2713a1483cf17c"
            ]
        ]
    },
    {
        "id": "a12987ff48b38858",
        "type": "ui_text",
        "z": "4c9052b45312a86c",
        "group": "3ac4bc89581c4705",
        "order": 1,
        "width": 4,
        "height": 1,
        "name": "state",
        "label": "{{msg.message}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "x": 710,
        "y": 680,
        "wires": []
    },
    {
        "id": "ea9e0ef5d883bbc4",
        "type": "ui_template",
        "z": "4c9052b45312a86c",
        "group": "3ac4bc89581c4705",
        "name": "",
        "order": 8,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload\"></div>\n\n<style>\n    .masonry-container {\n        width: 1400px;\n    },\n    .download_button {\n        padding: 100px;\n    }\n</style>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 620,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "70a46baed0ad0d98",
        "type": "mqtt in",
        "z": "4c9052b45312a86c",
        "name": "",
        "topic": "monitoring",
        "qos": "1",
        "datatype": "auto",
        "broker": "a06513f3bc8bf3af",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 720,
        "wires": [
            [
                "a1816e6ce32389e8",
                "dd33138b79ffa766"
            ]
        ]
    },
    {
        "id": "a1816e6ce32389e8",
        "type": "json",
        "z": "4c9052b45312a86c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 380,
        "y": 720,
        "wires": [
            [
                "53a3ad91fcf28acd",
                "f7d460aeaf3e1804",
                "a2ec36d86c9430c9",
                "f5ae2eb878c4a1d8"
            ]
        ]
    },
    {
        "id": "53a3ad91fcf28acd",
        "type": "function",
        "z": "4c9052b45312a86c",
        "name": "sql_query",
        "func": "var data = msg.payload;\n\nif (data.hasOwnProperty(\"count\")) {\n    /*var date = new Date(data[\"time\"]);\n    date.setMinutes(0, 0, 0); // Resets also seconds and milliseconds\n    data[\"time\"] = date.toISOString();\n    \n    var hour = date.getHours();\n    if (context.get(\"last_hour\") != hour) {\n        msg.topic = \"INSERT INTO monitoring (time, sensor, count) \\\n                     VALUES ('\" + data[\"time\"] + \"', '\" + data[\"sensor\"] + \"', '\" + data[\"count\"] + \"');\";\n    \n        context.set(\"last_hour\", hour);\n    } else {\n        msg.topic = \"UPDATE monitoring \\\n                     SET count=count+'\" + data[\"count\"] + \"' \\\n                     WHERE id=(SELECT MAX(id) FROM monitoring);\"\n    }*/\n    msg.topic = \"INSERT INTO monitoring (time, sensor, count) VALUES (:time, :sensor, :count)\";\n    msg.payload = {time: data[\"time\"], sensor: data[\"sensor\"], count: data[\"count\"]};\n    \n}\nelse if (data.hasOwnProperty(\"error\")) {\n    msg.topic = \"INSERT INTO events (time, sensor, error) VALUES (:time, :sensor, :error)\";\n    msg.payload = {time: data[\"time\"], sensor: data[\"sensor\"], error: data[\"error\"]};\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 780,
        "wires": [
            [
                "4e54577ba1bea706",
                "625cd8414c7715c7"
            ]
        ]
    },
    {
        "id": "4e54577ba1bea706",
        "type": "debug",
        "z": "4c9052b45312a86c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 860,
        "wires": []
    },
    {
        "id": "4cd6e1bab7260e36",
        "type": "debug",
        "z": "4c9052b45312a86c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 380,
        "wires": []
    },
    {
        "id": "75e48315179cce24",
        "type": "function",
        "z": "4c9052b45312a86c",
        "name": "convert",
        "func": "var data = [];\nfor (let i = 0; i < msg.payload.length; i++) {\n    data.push({\"x\": msg.payload[i][\"time\"], \"y\": msg.payload[i][\"count\"]});\n}\n\nmsg.payload = [\n    {\n        \"series\": [\n            \"count\"\n        ],\n        \"data\": [data],\n        \"labels\": [\n            \"\"\n        ]\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 320,
        "wires": [
            [
                "4cd6e1bab7260e36",
                "93c5bc104fada713"
            ]
        ]
    },
    {
        "id": "f5088a2c74baaa63",
        "type": "function",
        "z": "4c9052b45312a86c",
        "name": "convert",
        "func": "var data = [];\nfor (let i = 0; i < msg.payload.length; i++) {\n    var time = msg.payload[i][\"time\"].split(\"+\")[0];\n    time = time.split(\"T\")[0] + \" \" + time.split(\"T\")[1];\n    \n    var cause;\n    switch (msg.payload[i][\"error\"]) {\n        case 0:\n            cause = \"Arrêt\";\n            break;\n        default:\n            cause = \"Reprise\";\n            \n    }\n    data.push({\"Date/heure\": time, \"Gravité\": \"Avertissement\", \"Cause\": cause});\n}\n\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 580,
        "wires": [
            [
                "5643dc91943d3983"
            ]
        ]
    },
    {
        "id": "dab381dc0339ac5c",
        "type": "ui_text",
        "z": "4c9052b45312a86c",
        "group": "3ac4bc89581c4705",
        "order": 5,
        "width": 4,
        "height": 1,
        "name": "obj/min",
        "label": "Objets par minute: ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "x": 720,
        "y": 720,
        "wires": []
    },
    {
        "id": "f7d460aeaf3e1804",
        "type": "function",
        "z": "4c9052b45312a86c",
        "name": "get_number",
        "func": "var data = msg.payload;\n\nif (data.hasOwnProperty(\"count\")) {\n    msg.payload = data[\"count\"];\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 720,
        "wires": [
            [
                "dab381dc0339ac5c"
            ]
        ]
    },
    {
        "id": "a2ec36d86c9430c9",
        "type": "function",
        "z": "4c9052b45312a86c",
        "name": "get_state",
        "func": "var data = msg.payload;\n\nif (data.hasOwnProperty(\"error\")) {\n    if (data[\"error\"] > 0) {\n        msg.message = \"En fonctionnement\";\n    } else {\n        msg.message = \"À l'arrêt\";\n    }\n    \n    msg.topic = \"SELECT * FROM events ORDER BY id DESC LIMIT 30\";\n    msg.payload = {};\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 680,
        "wires": [
            [
                "a12987ff48b38858",
                "87095b828e1a874c"
            ]
        ]
    },
    {
        "id": "921d0f2d00011717",
        "type": "function",
        "z": "4c9052b45312a86c",
        "name": "convert",
        "func": "var data = msg.payload;\n\nvar less_5 = 0;\nvar less_10 = 0;\nvar others = 0;\n\nvar start_time;\nvar stop_time;\n\nfor (let i = 0; i < msg.payload.length; i++) {\n    if (data[i][\"error\"] > 0) {\n        stop_time = new Date(msg.payload[i][\"time\"]);\n    } else if (stop_time != null) {\n        start_time = new Date(msg.payload[i][\"time\"]);\n    }\n    \n    if (start_time != null && stop_time != null)\n    {\n        var delta_time = Math.floor(stop_time.getTime() / 60000) - Math.floor(start_time.getTime() / 60000);\n        if (delta_time <= 5) {\n            less_5++;\n        }\n        else if (delta_time <= 10) {\n            less_10++;\n        }\n        else {\n            others++;\n        }\n        \n        start_time = null;\n        stop_time = null;\n    }\n}\n\nmsg.payload = [\n    {\n        \"series\": [\n            \"Arrêts\"\n        ],\n        \"data\": [[less_5, less_10, others]],\n        \"labels\": [\n            \"5 min\",\n            \"10 min\",\n            \"Plus\"\n        ]\n    }\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 640,
        "wires": [
            [
                "0d2713a1483cf17c"
            ]
        ]
    },
    {
        "id": "d758154abc10a9ac",
        "type": "inject",
        "z": "4c9052b45312a86c",
        "name": "inject",
        "props": [
            {
                "p": "message",
                "v": "En fonctionnement",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "SELECT * FROM events ORDER BY id DESC LIMIT 30",
        "payloadType": "str",
        "x": 570,
        "y": 580,
        "wires": [
            [
                "a12987ff48b38858",
                "87095b828e1a874c"
            ]
        ]
    },
    {
        "id": "5643dc91943d3983",
        "type": "ui_table",
        "z": "4c9052b45312a86c",
        "group": "94836e9a3fe091eb",
        "name": "events",
        "order": 1,
        "width": 9,
        "height": 3,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1150,
        "y": 580,
        "wires": []
    },
    {
        "id": "87095b828e1a874c",
        "type": "Stackhero-MySQL",
        "z": "4c9052b45312a86c",
        "server": "fc391bb0bf5ac955",
        "name": "get_events",
        "x": 750,
        "y": 580,
        "wires": [
            [
                "f5088a2c74baaa63",
                "921d0f2d00011717"
            ]
        ]
    },
    {
        "id": "625cd8414c7715c7",
        "type": "Stackhero-MySQL",
        "z": "4c9052b45312a86c",
        "server": "fc391bb0bf5ac955",
        "name": "insert_values",
        "x": 740,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "e02556f1aaa0337c",
        "type": "Stackhero-MySQL",
        "z": "4c9052b45312a86c",
        "server": "fc391bb0bf5ac955",
        "name": "get_data",
        "x": 620,
        "y": 320,
        "wires": [
            [
                "75e48315179cce24"
            ]
        ]
    },
    {
        "id": "dd33138b79ffa766",
        "type": "function",
        "z": "4c9052b45312a86c",
        "name": "query",
        "func": "msg.topic = \"SELECT * FROM monitoring WHERE sensor=1 ORDER BY id DESC LIMIT 1440;\"\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 320,
        "wires": [
            [
                "e02556f1aaa0337c"
            ]
        ]
    },
    {
        "id": "f5ae2eb878c4a1d8",
        "type": "debug",
        "z": "4c9052b45312a86c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 840,
        "wires": []
    }
]